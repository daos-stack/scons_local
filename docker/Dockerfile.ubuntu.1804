#
# Copyright 2018, Intel Corporation
#
# 'recipe' for Docker to build an image of Ubuntu-based
# environment for building the DAOS project.
#

# Pull base image
FROM ubuntu:18.04
MAINTAINER Johann Lombardi <johann.lombardi@intel.com>

# Build arguments can be set via -build-arg
# set NOBUILD to disable git clone & build
ARG NOBUILD
# use same UID as host and default value of 1000 if not specified
ARG UID=1000

RUN if [ -n "${HTTP_PROXY}" ]; then \
  prx1=${HTTP_PROXY#\"};prx2=${prx1%\"}; \
  printf "Acquire::http::Proxy \"%s/\";\n" ${prx2} >> \
    /etc/apt/apt.conf; fi; \
  printf "\n\n"; cat /etc/apt/apt.conf || printf "\n\n"

# Update distribution and basic tools
RUN apt-get update; apt-get install -y software-properties-common; \
    add-apt-repository -y ppa:jhli/ipmctl; \
    add-apt-repository -y ppa:jhli/libsafec; \
    apt-get update; \
    apt-get install -y autoconf cmake curl doxygen flex git gcc golang-go \
      graphviz make meson mscgen nasm ninja-build pandoc patch scons \
      sg3-utils uuid-dev yasm \
      libaio-dev libboost-dev libcmocka0 libcmocka-dev libcunit1-dev \
      libevent-dev libibverbs-dev libiscsi-dev libltdl-dev libnuma-dev \
      librdmacm-dev libreadline6-dev libssl-dev libtool-bin libyaml-dev \
      python-dev python-github python-pep8 pylint pylint3 \
      libipmctl-dev; \
      if [ ! -e /usr/bin/ninja-build ];then \
        ln -s /usr/bin/ninja /usr/bin/ninja-build; fi

# Add DAOS user
ENV USER daos
ENV PASSWD daos
RUN useradd -u $UID -ms /bin/bash $USER;  echo "$USER:$PASSWD" | chpasswd

# Create directory for DAOS backend storage
RUN mkdir /mnt/daos; chown $UID /mnt/daos

# Create a target directory for prebuilts
RUN mkdir -p /testbin; chown $UID /testbin; ls -ld /testbin


# Switch to new user
USER $USER
WORKDIR /home/$USER

RUN if [ -n "${HTTP_PROXY}" ]; then \
  git config --global http.proxy "${HTTP_PROXY}"; \
  printf "proxy = %s\n" "${HTTP_PROXY##*/}" >> ~/.curlrc; fi
