# Copyright (C) 2016-2019 Intel Corporation
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted for any purpose (including commercial purposes)
# provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice,
#    this list of conditions, and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions, and the following disclaimer in the
#    documentation and/or materials provided with the distribution.
#
# 3. In addition, redistributions of modified forms of the source or binary
#    code must carry prominent notices stating that the original code was
#    changed and the date of the change.
#
#  4. All publications or advertising materials mentioning features or use of
#     this software are asked, but not required, to acknowledge that it was
#     developed by Intel Corporation and credit the contributors.
#
# 5. Neither the name of Intel Corporation, nor the name of any Contributor
#    may be used to endorse or promote products derived from this software
#    without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# 'recipe' for Docker to build an image of centOS-based
# environment for building the DAOS project.
#

# Pull base image
FROM centos:7
MAINTAINER Johann Lombardi <johann.lombardi@intel.com>

# Build arguments can be set via --build-arg
# use same UID as host and default value of 1000 if not specified
ARG UID=1000
ARG USE_RPMS=false

# for good measure, clean the metadata
RUN yum clean metadata

# Install basic tools
RUN yum -y install epel-release
RUN yum -y install                                                 \
           git gcc gcc-c++ make cmake golang libtool boost-devel   \
           libuuid-devel openssl-devel libevent-devel              \
           libtool-ltdl-devel libcmocka-devel readline-devel       \
           doxygen pandoc flex patch nasm yasm ninja-build meson   \
           CUnit-devel libaio-devel clang-analyzer sg3_utils       \
           libiscsi-devel numactl-devel graphviz                   \
           libyaml-devel                                           \
           scons pylint file ShellCheck python-pep8 lcov python    \
           python2-pygithub yum-plugin-copr

# external deps build/repos
# sadly this doesn't work
#RUN yum-config-manager --save --setopt=*_job_daos-stack_job_${ext}_job_master_lastSuccessfulBuild_artifact_artifacts_.gpgcheck=0
RUN if ! $USE_RPMS; then exit 0; fi;                                                                                                                    \
yum -y install hwloc-devel;                                                                                                                             \
for ext in openpa libfabric mercury pmix ompi; do                                                                                                       \
    yum-config-manager --add-repo=https://build.hpdd.intel.com/job/daos-stack/job/${ext}/job/master/lastSuccessfulBuild/artifact/artifacts/;            \
    echo "gpgcheck = False" >> /etc/yum.repos.d/build.hpdd.intel.com_job_daos-stack_job_${ext}_job_master_lastSuccessfulBuild_artifact_artifacts_.repo; \
done

ARG OPENPA=unknown
ARG LIBFABRIC=unknown
ARG MERCURY=unknown
ARG PMIX=unknown
ARG OMPI=unknown

RUN if ! $USE_RPMS; then exit 0; fi;                                            \
OPENPA=${OPENPA}                                                                \
LIBFABRIC=${LIBFABRIC}                                                          \
MERCURY=${MERCURY}                                                              \
PMIX=${PMIX}                                                                    \
OMPI=${OMPI}                                                                    \
yum -y install openpa-devel libfabric-devel mercury-devel pmix-devel ompi-devel

RUN yum -y copr enable jhli/ipmctl
RUN yum -y copr enable jhli/safeclib
RUN yum -y  install libipmctl-devel

RUN yum -y install librdmacm-devel valgrind valgrind-devel libibverbs-devel \
           python-jwt python-virtualenv python2-pip python34-pip            \
           python34-pygithub

ENV USER daos
ENV PASSWD daos
RUN useradd -u $UID -ms /bin/bash $USER
RUN echo "$USER:$PASSWD" | chpasswd

# Create directory for DAOS backend storage
RUN mkdir -p /mnt/daos; chown $UID /mnt/daos

# Create a target directory for prebuilts
RUN mkdir -p /testbin; chown $UID /testbin; ls -ld /testbin
# Switch to new user
USER $USER
WORKDIR /home/$USER

# set NOBUILD to disable git clone & build
ARG NOBUILD

RUN if [ -n "${HTTP_PROXY}" ]; then \
  git config --global http.proxy "${HTTP_PROXY}"; \
  printf "proxy = %s\n" "${HTTP_PROXY##*/}" >> ~/.curlrc; fi

